version: '3.3'

services:
  web:
    # build: .  # during development, this line allows for rebuilding the image from the source repo
    image: vad_deploy:0.1.2
    ports:
      - 8004:8000
    command: >
      sh -c '
      if ! getent group 2222 > /dev/null 2>&1; then
        groupadd -g 2222 vadklass &&
        useradd -u 2222 -g 2222 -m -d /home/vadklass vadklass &&
        chown -R 2222:2222 /usr/src/app &&
        su vadklass -c "whoami && uvicorn src.klass.vad_fastapi.main:app --host 0.0.0.0 --reload --log-config conf/base/uvicorn_cfg.ini"
      else
        su vadklass -c "whoami && uvicorn src.klass.vad_fastapi.main:app --host 0.0.0.0 --reload --log-config conf/base/uvicorn_cfg.ini"
      fi '
    volumes:
      # - .:/usr/src/app  # repo was initially mounted for immediate restart during development
      - ../vol_mount:/usr/src/app/vol_mount
    environment:
      - CELERY_BROKER_URL=amqp://admin:mypass@rabbit:5672
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_TASK_TRACK_STARTED=true
    depends_on:
      - redis
      - rabbit
    networks:
      - mynetwork

  worker:
    image: vad_deploy:0.1.2
    command: >
      sh -c '
      if ! getent group 2222 > /dev/null 2>&1; then
        groupadd -g 2222 vadklass &&
        useradd -u 2222 -g 2222 -m -d /home/vadklass vadklass &&
        chown -R 2222:2222 /usr/src/app &&
        su vadklass -c "whoami && celery -A src.klass.vad_fastapi.worker.celery worker --loglevel=info --logfile=/usr/src/app/vol_mount/logs/celery_worker.log"
      else
        su vadklass -c "whoami && celery -A src.klass.vad_fastapi.worker.celery worker --loglevel=info --logfile=/usr/src/app/vol_mount/logs/celery_worker.log"
      fi'
    volumes:
      # - .:/usr/src/app  # repo was initially mounted for immediate restart during development
      - ../vol_mount:/usr/src/app/vol_mount
    environment:
      - CELERY_BROKER_URL=amqp://admin:mypass@rabbit:5672
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_TASK_TRACK_STARTED=true
    depends_on:
      - web
      - redis
      - rabbit
    networks:
      - mynetwork

  # Redis - results backend
  redis:
    image: redis:alpine
    command: >
      sh -c '
      if ! getent group 2222 > /dev/null 2>&1; then
        addgroup -g 2222 vadklass &&
        adduser -u 2222 -G vadklass -h /home/vadklass -D vadklass &&
        chown -R 2222:2222 /home/vadklass &&
        chown -R 2222:2222 /data &&
        su vadklass -c "whoami && exec redis-server --bind 0.0.0.0 --appendonly yes"
      else
        su vadklass -c "whoami && exec redis-server --bind 0.0.0.0 --appendonly yes"
      fi'
    volumes:
      - ../vol_mount/db/redis_results_backend:/data
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  # RabbitMQ - queue
  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "5672:5672"
      - "15672:15672"  # here, we can access rabbitmq management plugin
    volumes:
      - ../vol_mount/db/rabbitmq_broker:/var/lib/rabbitmq/mnesia
    networks:
      - mynetwork

  # Flower Dashboard - monitors tasks queues and results
  # we set it to be persistent so it stores state between runs
  # and we rely on its json API for our task status retrievals
  dashboard:
    hostname: flower
    image: vad_deploy:0.1.2
    command: >
      sh -c '
        if ! getent group 2222 > /dev/null 2>&1; then
        groupadd -g 2222 vadklass &&
        useradd -u 2222 -g 2222 -m -d /home/vadklass vadklass &&
        chown -R 2222:2222 /etc/db &&
        su vadklass -c "celery --broker=amqp://admin:mypass@rabbit:5672 flower --port=5555 --logfile=/usr/src/app/vol_mount/logs/flower_dashboard.log"
      else
        su vadklass -c "celery --broker=amqp://admin:mypass@rabbit:5672 flower --port=5555 --logfile=/usr/src/app/vol_mount/logs/flower_dashboard.log"
      fi'
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=amqp://admin:mypass@rabbit:5672
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_PERSISTENT=True
      - FLOWER_STATE_SAVE_INTERVAL=20
      - FLOWER_DB=/etc/db/flower.db
    volumes:
      - ../vol_mount/db/flower_dashboard:/etc/db
    depends_on:
      - web
      - redis
      - rabbit
      - worker
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

